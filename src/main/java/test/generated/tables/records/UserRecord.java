/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.User;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record5<Integer, String, Double, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>users.user.id</code>.
     */
    public UserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>users.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>users.user.name</code>.
     */
    public UserRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>users.user.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>users.user.rating</code>.
     */
    public UserRecord setRating(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>users.user.rating</code>.
     */
    public Double getRating() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>users.user.available</code>.
     */
    public UserRecord setAvailable(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>users.user.available</code>.
     */
    public Boolean getAvailable() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>users.user.training</code>.
     */
    public UserRecord setTraining(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>users.user.training</code>.
     */
    public Boolean getTraining() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Double, Boolean, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Double, Boolean, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<Double> field3() {
        return User.USER.RATING;
    }

    @Override
    public Field<Boolean> field4() {
        return User.USER.AVAILABLE;
    }

    @Override
    public Field<Boolean> field5() {
        return User.USER.TRAINING;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Double component3() {
        return getRating();
    }

    @Override
    public Boolean component4() {
        return getAvailable();
    }

    @Override
    public Boolean component5() {
        return getTraining();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Double value3() {
        return getRating();
    }

    @Override
    public Boolean value4() {
        return getAvailable();
    }

    @Override
    public Boolean value5() {
        return getTraining();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(Double value) {
        setRating(value);
        return this;
    }

    @Override
    public UserRecord value4(Boolean value) {
        setAvailable(value);
        return this;
    }

    @Override
    public UserRecord value5(Boolean value) {
        setTraining(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, Double value3, Boolean value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String name, Double rating, Boolean available, Boolean training) {
        super(User.USER);

        setId(id);
        setName(name);
        setRating(rating);
        setAvailable(available);
        setTraining(training);
    }
}
