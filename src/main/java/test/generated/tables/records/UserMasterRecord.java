/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.UserMaster;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMasterRecord extends UpdatableRecordImpl<UserMasterRecord> implements Record7<Integer, LocalDateTime, Integer, LocalDateTime, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>users.user_master.id</code>.
     */
    public UserMasterRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>users.user_master.create_date</code>.
     */
    public UserMasterRecord setCreateDate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>users.user_master.record</code>.
     */
    public UserMasterRecord setRecord(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.record</code>.
     */
    public Integer getRecord() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>users.user_master.update_date</code>.
     */
    public UserMasterRecord setUpdateDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>users.user_master.age</code>.
     */
    public UserMasterRecord setAge(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.age</code>.
     */
    public String getAge() {
        return (String) get(4);
    }

    /**
     * Setter for <code>users.user_master.course</code>.
     */
    public UserMasterRecord setCourse(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.course</code>.
     */
    public String getCourse() {
        return (String) get(5);
    }

    /**
     * Setter for <code>users.user_master.username</code>.
     */
    public UserMasterRecord setUsername(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>users.user_master.username</code>.
     */
    public String getUsername() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDateTime, Integer, LocalDateTime, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, LocalDateTime, Integer, LocalDateTime, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserMaster.USER_MASTER.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserMaster.USER_MASTER.CREATE_DATE;
    }

    @Override
    public Field<Integer> field3() {
        return UserMaster.USER_MASTER.RECORD;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserMaster.USER_MASTER.UPDATE_DATE;
    }

    @Override
    public Field<String> field5() {
        return UserMaster.USER_MASTER.AGE;
    }

    @Override
    public Field<String> field6() {
        return UserMaster.USER_MASTER.COURSE;
    }

    @Override
    public Field<String> field7() {
        return UserMaster.USER_MASTER.USERNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDate();
    }

    @Override
    public Integer component3() {
        return getRecord();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdateDate();
    }

    @Override
    public String component5() {
        return getAge();
    }

    @Override
    public String component6() {
        return getCourse();
    }

    @Override
    public String component7() {
        return getUsername();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDate();
    }

    @Override
    public Integer value3() {
        return getRecord();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdateDate();
    }

    @Override
    public String value5() {
        return getAge();
    }

    @Override
    public String value6() {
        return getCourse();
    }

    @Override
    public String value7() {
        return getUsername();
    }

    @Override
    public UserMasterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserMasterRecord value2(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public UserMasterRecord value3(Integer value) {
        setRecord(value);
        return this;
    }

    @Override
    public UserMasterRecord value4(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public UserMasterRecord value5(String value) {
        setAge(value);
        return this;
    }

    @Override
    public UserMasterRecord value6(String value) {
        setCourse(value);
        return this;
    }

    @Override
    public UserMasterRecord value7(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserMasterRecord values(Integer value1, LocalDateTime value2, Integer value3, LocalDateTime value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserMasterRecord
     */
    public UserMasterRecord() {
        super(UserMaster.USER_MASTER);
    }

    /**
     * Create a detached, initialised UserMasterRecord
     */
    public UserMasterRecord(Integer id, LocalDateTime createDate, Integer record, LocalDateTime updateDate, String age, String course, String username) {
        super(UserMaster.USER_MASTER);

        setId(id);
        setCreateDate(createDate);
        setRecord(record);
        setUpdateDate(updateDate);
        setAge(age);
        setCourse(course);
        setUsername(username);
    }
}
