/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMaster implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       id;
    private LocalDateTime createDate;
    private Integer       record;
    private LocalDateTime updateDate;
    private String        age;
    private String        course;
    private String        username;

    public UserMaster() {}

    public UserMaster(UserMaster value) {
        this.id = value.id;
        this.createDate = value.createDate;
        this.record = value.record;
        this.updateDate = value.updateDate;
        this.age = value.age;
        this.course = value.course;
        this.username = value.username;
    }

    public UserMaster(
        Integer       id,
        LocalDateTime createDate,
        Integer       record,
        LocalDateTime updateDate,
        String        age,
        String        course,
        String        username
    ) {
        this.id = id;
        this.createDate = createDate;
        this.record = record;
        this.updateDate = updateDate;
        this.age = age;
        this.course = course;
        this.username = username;
    }

    /**
     * Getter for <code>users.user_master.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>users.user_master.id</code>.
     */
    public UserMaster setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>users.user_master.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>users.user_master.create_date</code>.
     */
    public UserMaster setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
        return this;
    }

    /**
     * Getter for <code>users.user_master.record</code>.
     */
    public Integer getRecord() {
        return this.record;
    }

    /**
     * Setter for <code>users.user_master.record</code>.
     */
    public UserMaster setRecord(Integer record) {
        this.record = record;
        return this;
    }

    /**
     * Getter for <code>users.user_master.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return this.updateDate;
    }

    /**
     * Setter for <code>users.user_master.update_date</code>.
     */
    public UserMaster setUpdateDate(LocalDateTime updateDate) {
        this.updateDate = updateDate;
        return this;
    }

    /**
     * Getter for <code>users.user_master.age</code>.
     */
    public String getAge() {
        return this.age;
    }

    /**
     * Setter for <code>users.user_master.age</code>.
     */
    public UserMaster setAge(String age) {
        this.age = age;
        return this;
    }

    /**
     * Getter for <code>users.user_master.course</code>.
     */
    public String getCourse() {
        return this.course;
    }

    /**
     * Setter for <code>users.user_master.course</code>.
     */
    public UserMaster setCourse(String course) {
        this.course = course;
        return this;
    }

    /**
     * Getter for <code>users.user_master.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>users.user_master.username</code>.
     */
    public UserMaster setUsername(String username) {
        this.username = username;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserMaster other = (UserMaster) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!createDate.equals(other.createDate))
            return false;
        if (record == null) {
            if (other.record != null)
                return false;
        }
        else if (!record.equals(other.record))
            return false;
        if (updateDate == null) {
            if (other.updateDate != null)
                return false;
        }
        else if (!updateDate.equals(other.updateDate))
            return false;
        if (age == null) {
            if (other.age != null)
                return false;
        }
        else if (!age.equals(other.age))
            return false;
        if (course == null) {
            if (other.course != null)
                return false;
        }
        else if (!course.equals(other.course))
            return false;
        if (username == null) {
            if (other.username != null)
                return false;
        }
        else if (!username.equals(other.username))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.record == null) ? 0 : this.record.hashCode());
        result = prime * result + ((this.updateDate == null) ? 0 : this.updateDate.hashCode());
        result = prime * result + ((this.age == null) ? 0 : this.age.hashCode());
        result = prime * result + ((this.course == null) ? 0 : this.course.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserMaster (");

        sb.append(id);
        sb.append(", ").append(createDate);
        sb.append(", ").append(record);
        sb.append(", ").append(updateDate);
        sb.append(", ").append(age);
        sb.append(", ").append(course);
        sb.append(", ").append(username);

        sb.append(")");
        return sb.toString();
    }
}
